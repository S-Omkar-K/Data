## where Yit > Yic, similar to above
harmed_population <- ifelse(Yit >Yic, 1, 0)
share_harmed <- sum(harmed_population)/total_population
percentage_harmed <- share_harmed * 100
print(paste("Share of population harmed from treatment = ", share_harmed))
print(paste("Percentage of population harmed from treatment = ", percentage_harmed))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(haven)
library(tidyverse)
data <- rep(c(1,0),times = c(600,400))
#data
data <- as.data.frame(data)
colnames(data) <- c("treatment_status")
set.seed(3132022)
##Create a dataset containing 1000 observations.
##Set a seed of 3132022 and construct a variable treated that takes a value of 1 for the  first  600  observations  and  a  value  of  0  for  the  last  400  observations.
##Simulate  two  random variables X1 and X2, where X1 and X2 are each uniformly distributed on [0,1]. Let ui = X1i and Ti = -2 * X2i + 1. Then construct the variables 洧녧洧녧洧녰洧녰洧녫洧녫 = 5 + ui  and 洧녧洧녧洧녰洧녰洧노洧노 = 5 + Ti + ui.
X1 <- runif(1000,min = 0 , max = 1)
X2 <- runif(1000,min = 0, max = 1)
ui <- X1
Ti <- (-2*X2) + 1
Yic <- 5 + ui
data$control <- Yic
Yit <- 5 + Ti + ui
data$treatment <- Yit
## a) Define a new variable Yobs equal to the length of hospitalization that would be observed for each  individual,  given  their  actual  treatment  status.
Yobs = ifelse(data == 1, Yit, Yic)
#Yobs
#data <- data %>% mutate(Yobs = ifelse(treatment_status == 1, Yit , Yic))
## b) Use  Yobs  to  compute  an  estimated  average  treatment  effect  on  length  of  hospitalization  by comparing  the  length  of  hospitalization  for  the  treated  and  control  groups  (use  summary  statistics  rather  than  a  regression).
b_1 <- data %>% group_by(treatment_status) %>% summarise(avg = mean(Yobs))
b_2 <- data %>% group_by(treatment_status) %>% summary(Yobs)
b_1
b_2
#calculate from treated group and control group
Ti_estimate  <- mean(Yobs[1:600]) - mean(Yobs[601:1000])
Ti_estimate
print(paste("Eestimated  average  treatment  effect  = " , Ti_estimate))
## c) What is the population mean of Ti? Is your answer to Part (b) exactly equal to this population mean? Why or why not?
data$Ti  <- Ti
c <- mean(data$Ti)
c
print(paste("Population mean of Ti = " , c))
## d) Calculate the mean of Ti in the sample (using all 1000 observations). Is the mean of Ti exactly the same as your estimate from Part (b)? Why or why not?
Ti_sample <- mean(Yit - Yic)
print(paste( "Mean of Ti in the sample = " , Ti_sample))
## e) Suppose you are a researcher that is reviewing the outcomes of this trial. What could you conclude about the effect of this treatment on a given individual? (4 points)
Ti_estimate_2 = mean(Yobs[1:600]) - mean(Yobs[601:1000])
Ti_estimate_2
print(paste("Estimated Average treatment effect Yit - Yic = ", Ti_estimate_2))
###The estimated average treatment effect is -0.0216501270141451
### f) In this simulation, we know the true distribution of Ti. (Note that this is seldom if ever possible in real life.) What is the range of treatment effects in the population? What share of the population would benefit from the treatment, and what share would be harmed by the treatment?
##Range
range <- max(Ti) - min(Ti)
print(paste("Range of treatment effects in population is = ", range ))
##Share beneffitted
beneffitted <- ifelse(Yit < Yic, 1, 0)
total_population <- length(beneffitted)
share_beneffitted <- (sum(beneffitted)/total_population)
percentage_benefitted <- share_beneffitted * 100
print(paste("Share of population benefitted from treatment = ", share_beneffitted))
print(paste("Percentage of population benefitted from treatment = ", percentage_benefitted))
##Harmed population
## where Yit > Yic, similar to above
harmed_population <- ifelse(Yit >Yic, 1, 0)
share_harmed <- sum(harmed_population)/total_population
percentage_harmed <- share_harmed * 100
print(paste("Share of population harmed from treatment = ", share_harmed))
print(paste("Percentage of population harmed from treatment = ", percentage_harmed))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(haven)
library(tidyverse)
data <- rep(c(1,0),times = c(600,400))
#data
data <- as.data.frame(data)
colnames(data) <- c("treatment_status")
set.seed(3132022)
##Create a dataset containing 1000 observations.
##Set a seed of 3132022 and construct a variable treated that takes a value of 1 for the  first  600  observations  and  a  value  of  0  for  the  last  400  observations.
##Simulate  two  random variables X1 and X2, where X1 and X2 are each uniformly distributed on [0,1]. Let ui = X1i and Ti = -2 * X2i + 1. Then construct the variables 洧녧洧녧洧녰洧녰洧녫洧녫 = 5 + ui  and 洧녧洧녧洧녰洧녰洧노洧노 = 5 + Ti + ui.
X1 <- runif(1000,min = 0 , max = 1)
X2 <- runif(1000,min = 0, max = 1)
ui <- X1
Ti <- (-2*X2) + 1
Yic <- 5 + ui
data$control <- Yic
Yit <- 5 + Ti + ui
data$treatment <- Yit
## a) Define a new variable Yobs equal to the length of hospitalization that would be observed for each  individual,  given  their  actual  treatment  status.
Yobs = ifelse(data == 1, Yit, Yic)
#Yobs
#data <- data %>% mutate(Yobs = ifelse(treatment_status == 1, Yit , Yic))
## b) Use  Yobs  to  compute  an  estimated  average  treatment  effect  on  length  of  hospitalization  by comparing  the  length  of  hospitalization  for  the  treated  and  control  groups  (use  summary  statistics  rather  than  a  regression).
b_1 <- data %>% group_by(treatment_status) %>% summarise(avg = mean(Yobs))
b_2 <- data %>% group_by(treatment_status) %>% summary(Yobs)
b_1
b_2
#calculate from treated group and control group
Ti_estimate  <- mean(Yobs[1:600]) - mean(Yobs[601:1000])
Ti_estimate
print(paste("Eestimated  average  treatment  effect  = " , Ti_estimate))
## c) What is the population mean of Ti? Is your answer to Part (b) exactly equal to this population mean? Why or why not?
data$Ti  <- Ti
c <- mean(data$Ti)
c
print(paste("Population mean of Ti = " , c))
## d) Calculate the mean of Ti in the sample (using all 1000 observations). Is the mean of Ti exactly the same as your estimate from Part (b)? Why or why not?
Ti_sample <- mean(Yit - Yic)
print(paste( "Mean of Ti in the sample = " , Ti_sample))
## e) Suppose you are a researcher that is reviewing the outcomes of this trial. What could you conclude about the effect of this treatment on a given individual? (4 points)
Ti_estimate_2 = mean(Yobs[1:600]) - mean(Yobs[601:1000])
Ti_estimate_2
print(paste("Estimated Average treatment effect Yit - Yic = ", Ti_estimate_2))
###The estimated average treatment effect is -0.0216501270141451
### f) In this simulation, we know the true distribution of Ti. (Note that this is seldom if ever possible in real life.) What is the range of treatment effects in the population? What share of the population would benefit from the treatment, and what share would be harmed by the treatment?
##Range
range <- max(Ti) - min(Ti)
print(paste("Range of treatment effects in population is = ", range ))
##Share beneffitted
beneffitted <- ifelse(Yit < Yic, 1, 0)
total_population <- length(beneffitted)
share_beneffitted <- (sum(beneffitted)/total_population)
percentage_benefitted <- share_beneffitted * 100
print(paste("Share of population benefitted from treatment = ", share_beneffitted))
print(paste("Percentage of population benefitted from treatment = ", percentage_benefitted))
##Harmed population
## where Yit > Yic, similar to above
harmed_population <- ifelse(Yit >Yic, 1, 0)
share_harmed <- sum(harmed_population)/total_population
percentage_harmed <- share_harmed * 100
print(paste("Share of population harmed from treatment = ", share_harmed))
print(paste("Percentage of population harmed from treatment = ", percentage_harmed))
knitr::opts_chunk$set(echo = TRUE)
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
load(kielmc.Rdata)
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
load("kielmc.Rdata")
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
data <- load("kielmc.Rdata")
data <- data %>% mutate(dist = dist/5200) %>% mutate(area=area/1000)
data <- data %>% mutate(dist = dist/5280) %>% mutate(area=area/1000)
data <- data %>% mutate(dist = dist/5280)
data
data
desc(data)
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
y <- load("kielmc.Rdata")
data
desc(data)
y
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
dataa <- load("kielmc.Rdata")
dataa
knitr::opts_chunk$set(echo = TRUE)
setwd("E:/Winter_22/Adv_stats/2/R")
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
data <- load("kielmc.Rdata")
data
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
data <- load("kielmc.Rdata")
data
data <- data %>% mutate(dist = dist/5280) %>% mutate(area = area/1000)
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
load("E:\Winter_22\Adv_stats\2\R\kielmc.RData")
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
load("E:/Winter_22/Adv_stats/2/R/kielmc.RData")
data <- data %>% mutate(dist = dist/5280) %>% mutate(area = area/1000)
data <- data %>% mutate(dist = dist/5280) %>% mutate(area = area/1000)
data
a <- lm_robust(dist~area, data=data, se_type = "stata")
summary(a)
a <- lm(formula = dist~area, data=data, se_type = "stata")
summary(a)
a <- lm_robust(formula = dist~area, data=data, se_type = "stata")
summary(a)
a <- lm(formula = dist~area, data=data, se_type = "stata")
summary(a)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
load("E:/Winter_22/Adv_stats/2/R/kielmc.RData")
#Convert distance into miles by dividing it by 5280
#Convert area into thousands of sqft by dividing it by 1000
data <- data %>% mutate(dist = dist/5280) %>% mutate(area = area/1000)
a_2 <- lm(formula = dist~area, data=data, se_type = "stata")
summary(a)
a_2 <- lm(formula = dist~area, data=data, se_type = "stata")
summary(a_2)
a_2 <- lm(formula = dist~area, data=data, se_type = "stata")
summary(a_2)
a_2 <- lm_robust(formula = dist~area, data=data, se_type = "stata")
summary(a_2)
#Convert distance into miles by dividing it by 5280
#Convert area into thousands of sqft by dividing it by 1000
data <- data %>% mutate(dist = dist/5280) %>% mutate(area = area/1000)
a_2 <- lm_robust(formula = dist~area, data=data, se_type = "stata")
summary(a_2)
a_2 <- lm(formula = dist~area, data=data, se_type = "stata")
summary(a_2)
a_3 <- lm(formula = price~dist, data = data, se_type = 'stata')
summary(a_3)
a_3 <- lm(formula = price~dist, data = data, se_type = 'stata')
summary(a_3)
b <- lm(formula = price ~dist, data = data, se_type = "stata")
summary(b)
c <- lm(formula = price ~ dist + area, data = data, se_type = "stata")
summary(c)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
load("E:/Winter_22/Adv_stats/2/R/kielmc.RData")
#Convert distance into miles by dividing it by 5280
#Convert area into thousands of sqft by dividing it by 1000
data <- data %>% mutate(dist = dist/5280) %>% mutate(area = area/1000)
a_2 <- lm(formula = dist~area, data=data, se_type = "stata")
summary(a_2)
a_3 <- lm(formula = price~dist, data = data, se_type = 'stata')
summary(a_3)
b <- lm(formula = price ~dist, data = data, se_type = "stata")
summary(b)
c <- lm(formula = price ~ dist + area, data = data, se_type = "stata")
summary(c)
#Convert distance into miles by dividing it by 5280
#Convert area into thousands of sqft by dividing it by 1000
data <- data %>% mutate(dist = dist/5280) %>% mutate(area = area/1000)
a_2 <- lm(formula = dist~area, data=data, se_type = "stata")
summary(a_2)
#Convert distance into miles by dividing it by 5280
#Convert area into thousands of sqft by dividing it by 1000
data <- data %>% mutate(dist = dist/5280) %>% mutate(area = area/1000)
a_2 <- lm(formula = dist~area, data=data, se_type = "stata")
summary(a_2)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
set.seed(11111)
library(tidyverse)
library(estimatr)
library(Rcpp)
library(readxl)
library(haven)
library(boot)
load("E:/Winter_22/Adv_stats/2/R/kielmc.RData")
#Convert distance into miles by dividing it by 5280
#Convert area into thousands of sqft by dividing it by 1000
data_lm <- data %>% mutate(dist = dist/5280) %>% mutate(area = area/1000)
a_2 <- lm(formula = dist~area, data=data_lm, se_type = "stata")
summary(a_2)
a_3 <- lm(formula = price~dist, data = data_lm, se_type = 'stata')
summary(a_3)
b <- lm(formula = price ~dist, data = data_lm, se_type = "stata")
summary(b)
c <- lm(formula = price ~ dist + area, data = data_lm, se_type = "stata")
summary(c)
#Part d
x = lm(formula = dist~area, data = data_lm, se_type = "stata")
resid_x = residuals(x)
summary(resid_x)
#Part d
x = lm(formula = dist~area, data = data_lm, se_type = "stata")
resid_x = residuals(x)
summary(resid_x)
y = lm(formula = price ~ area + area, data = data_lm, se_type = "stata")
resid_y = residuals(y)
summary(resid_y)
z = lm(formula = resid_y ~ resid_x , data = data_lm, se_type = "stata")
summary(z)
#Part d
x = lm(formula = dist~area, data = data_lm, se_type = "stata")
resid_x = residuals(x)
#summary(resid_x)
y = lm(formula = price ~ area + area, data = data_lm, se_type = "stata")
resid_y = residuals(y)
#summary(resid_y)
z = lm(formula = resid_y ~ resid_x , data = data_lm, se_type = "stata")
summary(z)
c <- lm(formula = price ~ dist + area, data = data_lm)
summary(c)
#Part d
x = lm(formula = dist~area, data = data_lm, se_type = "stata")
resid_x = residuals(x)
#summary(resid_x)
y = lm(formula = price ~ area + area, data = data_lm, se_type = "stata")
resid_y = residuals(y)
#summary(resid_y)
z = lm(formula = resid_y ~ resid_x , data = data_lm, se_type = "stata")
summary(z)
#Part d
x = lm(formula = area~dist, data = data_lm, se_type = "stata")
resid_x = residuals(x)
#summary(resid_x)
y = lm(formula = price ~ area + area, data = data_lm, se_type = "stata")
resid_y = residuals(y)
#summary(resid_y)
z = lm(formula = resid_y ~ resid_x , data = data_lm, se_type = "stata")
summary(z)
#Part d
x = lm(formula = dist~area, data = data_lm, se_type = "stata")
resid_x = residuals(x)
#summary(resid_x)
y = lm(formula = price ~ area + area, data = data_lm, se_type = "stata")
resid_y = residuals(y)
#summary(resid_y)
z = lm(formula = resid_y ~ resid_x , data = data_lm, se_type = "stata")
summary(z)
#Part d
x = lm(formula = dist~area, data = data_lm)
resid_x = residuals(x)
#summary(resid_x)
y = lm(formula = price ~ area , data = data_lm)
resid_y = residuals(y)
#summary(resid_y)
z = lm(formula = resid_y ~ resid_x , data = data_lm)
summary(z)
##Estimate of resid_x coefficient = 3160
##which is same as the estimate of dist coefficient found in part c i.e 3160
##From above, we can say that regression price
##on dist and area gives the same effect of dist as
##regressing price on residuals from a regression of dist on price
##This means, only the part of dist that is uncorrelated
b <- lm(formula = price ~dist, data = data_lm)
summary(b)
## Coefficient of dist variable is 5331
## Standard error 1472
data_lm
data_lm
##We see many other variables in the data.
##Few to notice here are as following
## land - Total area of plot
## age - Age of the house
## rooms - Number of rooms
## baths - number of bathrooms
##The above factors can affect the price of house
z = lm(formula = dist ~ land , data = data_lm)
describe(data_lm)
colnames(data_lm)
##We see many other variables in the data.
##Few to notice here are as following
## land - Total area of plot
## age - Age of the house
## rooms - Number of rooms
## baths - number of bathrooms
##The above factors can affect the price of house
z = lm(formula = dist ~ land , data = data_lm)
colnames(data_lm)
##We see many other variables in the data.
##Few to notice here are as following
## land - Total area of plot
## age - Age of the house
## rooms - Number of rooms
## baths - number of bathrooms
##The above factors can affect the price of house
##Now lets see relation between above factors and dist
dist_land = lm(formula = dist ~ land , data = data_lm)
summary(dist_land)
##Now lets see relation between above factors and dist
dist_land = lm(formula = dist ~ land , data = data_lm)
summary(dist_land)
##We observe the estimate value is postive. sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that land can be a control variable for dist
##Interpreted like, as the unit of land increases/decreases
##distance from garbage incinerator increases/decreases
##by1.353e-05.
dist_rooms = lm(formula = dist ~ rooms , data = data_lm)
summary(dist_rooms)
##Now lets see relation between above factors and dist
dist_land = lm(formula = dist ~ land , data = data_lm)
summary(dist_land)
##We observe the estimate value is postive. sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that land can be a control variable for dist
##Interpreted like, as the unit of land increases/decreases
##distance from garbage incinerator increases/decreases
##by1.353e-05.
dist_age = lm(formula = dist ~ land , data = data_lm)
summary(dist_age)
##We observe the estimate value is negative sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that age can be a control variable for dist
##Interpreted like, as the age of the house increases/decreases
##distance from garbage incinerator decreases/increases
##by1.353e-05.
dist_rooms = lm(formula = dist ~ rooms , data = data_lm)
summary(dist_rooms)
##We observe the estimate value is postive. sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that rooms can be a control variable for dist
##Interpreted like, as the number of rooms increases/decreases
##distance from garbage incinerator increases/decreases
##by 0.48918.
##Now lets see relation between above factors and dist
dist_land = lm(formula = dist ~ land , data = data_lm)
summary(dist_land)
##We observe the estimate value is postive. sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that land can be a control variable for dist
##Interpreted like, as the unit of land increases/decreases
##distance from garbage incinerator increases/decreases
##by1.353e-05.
dist_age = lm(formula = dist ~ age , data = data_lm)
summary(dist_age)
##We observe the estimate value is negative sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that age can be a control variable for dist
##Interpreted like, as the age of the house increases/decreases
##distance from garbage incinerator decreases/increases
##by1.353e-05.
dist_rooms = lm(formula = dist ~ rooms , data = data_lm)
summary(dist_rooms)
##We observe the estimate value is postive. sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that rooms can be a control variable for dist
##Interpreted like, as the number of rooms increases/decreases
##distance from garbage incinerator increases/decreases
##by 0.48918.
##Now lets see relation between above factors and dist
dist_land = lm(formula = dist ~ land , data = data_lm)
summary(dist_land)
##We observe the estimate value is postive. sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that land can be a control variable for dist
##Interpreted like, as the unit of land increases/decreases
##distance from garbage incinerator increases/decreases
##by1.353e-05.
dist_age = lm(formula = dist ~ age , data = data_lm)
summary(dist_age)
##We observe the estimate value is negative sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that age can be a control variable for dist
##Interpreted like, as the age of the house increases/decreases
##distance from garbage incinerator decreases/increases
##by 0.017327.
dist_rooms = lm(formula = dist ~ rooms , data = data_lm)
summary(dist_rooms)
##We observe the estimate value is postive. sd is positive.
##And p value indicates that the estimate cannot be zero
##This means that rooms can be a control variable for dist
##Interpreted like, as the number of rooms increases/decreases
##distance from garbage incinerator increases/decreases
##by 0.48918.
dist_baths = lm(formula = dist ~ baths , data = data_lm)
summary(dist_baths)
